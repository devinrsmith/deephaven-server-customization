plugins {
  id 'application'
  alias(libs.plugins.spotless)
}

repositories {
  mavenCentral()
  maven {
    url 'https://packages.confluent.io/maven'
    content {
      includeGroup 'io.confluent'
      includeGroup 'org.apache.kafka'
    }
  }
}


dependencies {
  implementation platform(libs.deephaven.bom)
  implementation libs.deephaven.server.jetty
  implementation project(':my-startup-time-app')

  implementation libs.dagger
  annotationProcessor libs.dagger.compiler

  // Logging
  runtimeOnly libs.logback.classic
  runtimeOnly libs.deephaven.log.to.slf4j
  runtimeOnly libs.deephaven.logback.print.stream.globals
  runtimeOnly libs.deephaven.logback.logbuffer

  // Optional
  runtimeOnly libs.deephaven.engine.sql
  runtimeOnly libs.deephaven.hotspot.impl
  runtimeOnly libs.deephaven.clock.impl
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

spotless {
  java {
    googleJavaFormat()
  }
  groovyGradle {
    greclipse().configFile("$rootDir/style/greclipse.properties")
  }
}

def extraJvmArgs = [
  '-server',
  '-XshowSettings:vm',
  // For arrow
  '--add-opens',
  'java.base/java.nio=ALL-UNNAMED',
  // For deephaven-hotspot-impl
  '--add-exports',
  'java.management/sun.management=ALL-UNNAMED',
  // For deephaven-clock-impl
  '--add-exports',
  'java.base/jdk.internal.misc=ALL-UNNAMED',
]

if (hasProperty('groovy')) {
  extraJvmArgs += ['-Ddeephaven.console.type=groovy']
}

tasks.withType(JavaExec).configureEach {
  // This appends to the existing jvm args, so that java-open-nio still takes effect
  jvmArgs extraJvmArgs
}

tasks.withType(CreateStartScripts).configureEach {
  defaultJvmOpts += extraJvmArgs
}

application {
  mainClass = 'com.devinrsmith.MyDeephavenServer'
}
